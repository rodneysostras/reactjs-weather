{"version":3,"sources":["theme/globalstyle.ts","theme/index.tsx","service/openweathermap.ts","reducer/weather/index.ts","hooks/store.ts","pages/home/components/styled-common.ts","pages/home/components/condition/styled.ts","components/button-theme-toggle/styled.ts","components/footer/styled.ts","components/footer/index.tsx","components/alert/styled.ts","components/alert/index.tsx","components/header/styled.ts","assets/img/puff.svg","assets/img/search.svg","components/search/styled.ts","components/search/index.tsx","hooks/hooks.ts","components/header/index.tsx","components/skeleton-loader/styled.ts","components/skeleton-loader/index.tsx","pages/home/components/condition/index.tsx","pages/home/components/detail/styled.ts","pages/home/components/detail/index.tsx","pages/home/components/list/styled.ts","pages/home/components/list/index.tsx","assets/img/location-pin.svg","pages/home/components/location/styled.ts","pages/home/components/location/index.tsx","assets/img/world.png","pages/home/styled.ts","pages/home/index.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","setTheme","theme","root","document","documentElement","undefined","classList","toggle","localStorage","setItem","JSON","stringify","contains","ThemeProvider","props","themeStorage","getItem","window","matchMedia","matches","disableVendorPrefixes","process","Fragment","children","api_openWeatherMap","axios","create","baseURL","params","lang","units","appid","OpenWeatherMap","city","options","q","Promise","resolve","reject","request","then","data","status","dt","cod","message","location","id","name","country","sys","coord_lon","coord","lon","coord_lat","lat","timezone","temp","Math","floor","main","astro","sunrise","sunset","element","feels_like","temp_min","temp_max","pressure","humidity","wind_speed","wind","speed","wind_deg","deg","clouds","all","condition","weather","description","icon","catch","response","console","log","setCityWeather","createAsyncThunk","a","rejectWithValue","GetCity","error","weatherSlice","createSlice","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","selectWeather","store","configureStore","reducer","weatherReducer","CssContainerCommon","css","Container","styled","section","ContainerCondition","div","IconCondition","img","button","i","footer","Copyright","span","Footer","ContentAlert","Alert","value","React","hide","setHide","Popup","setTimeout","header","form","TextField","input","cssIcon","IconSearch","ImageSearch","IconLoading","ImagePuff","Search","onSubmit","loading","autoComplete","type","disabled","useAppSelector","useSelector","Header","search","setSearch","dispatch","useDispatch","placeholder","onChange","e","currentTarget","preventDefault","keyframes","Skeleton","width","height","radius","margin","SkeletonLoader","Condition","src","alt","ItemDetail","Detail","Array","fill","map","ContainerItemList","List","ValueTemperature","ContainerUnitsTemperature","ItemUnitsTemperature","active","SeparateUnitsTemperature","ContainerLocation","IconLocation","IconLocationPin","CityLocation","h3","CountryLocation","Info","n","fahrenheit","setFahrenheit","handlerItemUnits","remove","Temperature","href","onClick","Location","LayoutContainer","ImageWorld","MainLayoutContainer","Home","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1ebaefb.chunk.js","sourcesContent":["// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n:root {\n    --bg-body: #f3f3f3;\n    --text-color: #000;\n}\n\n:root.theme-dark {\n    --bg-body: #292C35;\n    --text-color: #fff;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    box-sizing: border-box;\n}\n\nhtml, body #root {\n    min-height: 100vh;\n}\n\nbody {\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1rem;\n    line-height: 1.5;\n\n    color: var(--text-color);\n    background-color: var(--bg-body);\n    transition: background 0.2s linear;\n}\n\n#root {\n    display: grid; \n    grid-template-columns: 100%; \n    grid-template-rows: 90px 1fr 60px; \n    gap: 0px 0px; \n    grid-template-areas: \n        \"header\"\n        \"main\"\n        \"footer\"; \n    width: 100vw;\n    max-width: 1280px;\n    margin: 0 auto;\n}\n\na {\n    text-decoration: none;\n    color: var(--text-color);\n}\n\n`;\n\nexport default GlobalStyle;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nexport { GlobalStyle } from './globalstyle';\nimport React from 'react';\nimport { StyleSheetManager } from 'styled-components';\n\nexport function setTheme(theme?: 'theme-dark' | 'theme-light' | undefined) {\n    const root = document.documentElement;\n\n    if (theme === undefined) {\n        root.classList.toggle('theme-dark');\n    } else if (theme === 'theme-dark') {\n        root.classList.toggle('theme-dark', true);\n    } else {\n        root.classList.toggle('theme-dark', false);\n    }\n\n    localStorage.setItem(\n        'dark-theme-weather-rs',\n        JSON.stringify(root.classList.contains('theme-dark'))\n    );\n}\n\nexport default function ThemeProvider(props: { children: React.ReactNode }) {\n    const themeStorage = localStorage && localStorage.getItem('dark-theme-weather-rs');\n\n    if (themeStorage !== null && themeStorage === 'true') {\n        setTheme('theme-dark');\n    } else if (themeStorage === null && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        setTheme('theme-dark');\n    } else {\n        setTheme('theme-light');\n    }\n\n    return (\n        <StyleSheetManager disableVendorPrefixes={process.env.NODE_ENV === 'development'}>\n            <React.Fragment>{props.children}</React.Fragment>\n        </StyleSheetManager>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport axios from 'axios';\n\nconst api_openWeatherMap = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5/weather',\n    params: {\n        lang: 'pt_br',\n        units: 'metric',\n        appid: process.env.REACT_APP_API_OPENWAETHERMAP,\n    },\n});\n\nexport default class OpenWeatherMap {\n    public static async GetCity(city: string) {\n        const options = {\n            params: {\n                q: city,\n            },\n        };\n        return new Promise((resolve, reject) => {\n            api_openWeatherMap\n                .request(options)\n                .then(({ data }) =>\n                    resolve({\n                        status: {\n                            dt: data.dt,\n                            cod: data.cod,\n                            message: '',\n                        },\n                        location: {\n                            id: data.id,\n                            name: data.name,\n                            country: data.sys.country,\n                            coord_lon: data.coord.lon,\n                            coord_lat: data.coord.lat,\n                            timezone: data.timezone,\n                            temp: Math.floor(data.main.temp),\n                        },\n                        astro: {\n                            sunrise: data.sys.sunrise,\n                            sunset: data.sys.sunset,\n                        },\n                        element: {\n                            feels_like: Math.floor(data.main.feels_like),\n                            temp_min: Math.floor(data.main.temp_min),\n                            temp_max: Math.floor(data.main.temp_max),\n                            pressure: data.main.pressure,\n                            humidity: data.main.humidity,\n                            wind_speed: data.wind.speed,\n                            wind_deg: data.wind.deg,\n                            clouds: data.clouds.all,\n                        },\n                        condition: {\n                            id: data.weather[0].id,\n                            name: data.weather[0].main,\n                            description: data.weather[0].description,\n                            icon: data.weather[0].icon,\n                        },\n                    })\n                )\n                .catch(({ response }) => {\n                    console.log(response.data);\n                    reject(response.data);\n                });\n        });\n    }\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { RootState } from '~/hooks/store';\nimport OpenWeatherMap from '~/service/openweathermap';\n\nexport interface IWeatherData {\n    dt: number;\n    location: {\n        id: number;\n        name: string;\n        country: string;\n        coord_lon: number;\n        coord_lat: number;\n        timezone: number;\n        temp: number;\n    };\n    astro: {\n        sunrise: number;\n        sunset: number;\n    };\n    element: {\n        feels_like: number;\n        temp_min: number;\n        temp_max: number;\n        pressure: number;\n        humidity: number;\n        wind_speed: number;\n        wind_deg: number;\n        clouds: number;\n    };\n    condition: {\n        id: number;\n        name: string;\n        description: string;\n        icon: string;\n    };\n}\n\nexport interface IWeatherStatus {\n    cod: number;\n    name: 'START' | 'LOADING' | 'IDLE' | 'FAILED';\n    message: string;\n}\n\nexport interface IWeatherState {\n    data: IWeatherData;\n    status: IWeatherStatus;\n}\n\nconst initialState: IWeatherState = {\n    data: {\n        dt: 0,\n        location: {\n            id: 0,\n            name: '',\n            country: '',\n            coord_lon: 0,\n            coord_lat: 0,\n            timezone: 0,\n            temp: 0,\n        },\n        astro: {\n            sunrise: 0,\n            sunset: 0,\n        },\n        element: {\n            feels_like: 0,\n            temp_min: 0,\n            temp_max: 0,\n            pressure: 0,\n            humidity: 0,\n            wind_speed: 0,\n            wind_deg: 0,\n            clouds: 0,\n        },\n        condition: {\n            id: 0,\n            name: '',\n            description: '',\n            icon: '',\n        },\n    },\n    status: {\n        cod: 0,\n        name: 'START',\n        message: '',\n    },\n} as IWeatherState;\n\nexport const setCityWeather = createAsyncThunk(\n    'weather/setCityWeather',\n    async (city: string, { rejectWithValue }) =>\n        await OpenWeatherMap.GetCity(city).catch((error) => rejectWithValue(error))\n);\n\nexport const weatherSlice = createSlice({\n    name: 'weather',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(setCityWeather.pending, (state) => {\n                state.status = { name: 'LOADING', cod: 200, message: '' } as IWeatherStatus;\n            })\n            .addCase(setCityWeather.fulfilled, (state, { payload }) => {\n                state.status = { name: 'IDLE', cod: 200, message: '' } as IWeatherStatus;\n                state.data = payload as IWeatherData;\n            })\n            .addCase(setCityWeather.rejected, (state, { payload }) => {\n                state.status = {\n                    ...(payload as IWeatherStatus),\n                    name: 'FAILED',\n                } as IWeatherStatus;\n            });\n    },\n});\n\nexport const selectWeather = (state: RootState) => {\n    return { ...state.weather.data, status: state.weather.status };\n};\n\nexport default weatherSlice.reducer;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nimport weatherReducer from '~/reducer/weather';\n\nexport const store = configureStore({\n    reducer: {\n        weather: weatherReducer,\n    },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n    ReturnType,\n    RootState,\n    unknown,\n    Action<string>\n>;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { css } from 'styled-components';\n\nexport const CssContainerCommon = css`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    gap: 10px;\n    width: 200px;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nimport { CssContainerCommon } from '../styled-common';\n\nexport const Container = styled.section`\n    ${CssContainerCommon}\n`;\n\nexport const ContainerCondition = styled.div`\n    height: 200px;\n    width: 200px;\n`;\n\nexport const IconCondition = styled.img`\n    height: 100%;\n    width: 100%;\n    filter: drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7));\n    -webkit-filter: drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7));\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nexport const ButtonToggle = styled.button`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    border-radius: 50%;\n`;\n\nexport const IconButtonToggle = styled.i`\n    border-radius: inherit;\n    font-style: normal;\n\n    &:before {\n        content: '🌙';\n        position: relative;\n        display: block;\n        height: 30px;\n        width: 30px;\n        line-height: 30px;\n        border-radius: inherit;\n        border: 3px solid #c2c2c2;\n        background-color: #191970; // meia-noite\n        transition: background 0.2s linear;\n    }\n\n    .theme-dark &:before {\n        content: '☀️';\n        border: 3px solid #fafafa;\n        background-color: #87ceeb; // dia\n    }\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nexport const Container = styled.footer`\n    grid-area: footer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 60px;\n    width: 100%;\n`;\n\nexport const Copyright = styled.span`\n    font-weight: 500;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as C from './styled';\n\nexport default function Footer() {\n    return (\n        <C.Container>\n            <C.Copyright>Copyright © 2021 Rodney Sostras</C.Copyright>\n        </C.Container>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n    position: absolute;\n    display: flex;\n    flex-direction: row;\n    top: 10px;\n    right: 10px;\n\n    padding: 10px;\n    border-radius: 4px;\n    background-color: #ff5252; //red\n    color: #fff;\n\n    box-shadow: 0 0 0 0 rgb(0 0 0 / 20%), 0 0 0 0 rgb(0 0 0 / 14%), 0 0 0 0 rgb(0 0 0 / 12%);\n`;\n\nexport const IconAlert = styled.span``;\n\nexport const ContentAlert = styled.div`\n    font-weight: bold;\n    line-height: 34px;\n`;\n\nexport const CloseAlert = styled.span`\n    margin: 0 10px;\n    font-size: 22px;\n    font-weight: bold;\n    cursor: pointer;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport * as C from './styled';\n\nexport interface IAlert {\n    value: string;\n}\n\nexport default function Alert({ value }: IAlert) {\n    const [hide, setHide] = React.useState(true);\n\n    React.useMemo(() => setHide(false), [value]);\n\n    function Popup() {\n        setTimeout(() => setHide(true), 2000);\n        return (\n            <C.Container>\n                <C.ContentAlert>{value}</C.ContentAlert>\n                {/* <C.CloseAlert>&times;</C.CloseAlert> */}\n            </C.Container>\n        );\n    }\n\n    return <React.Fragment>{hide ? null : <Popup />}</React.Fragment>;\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nexport const Container = styled.header`\n    grid-area: header;\n    display: flex;\n    align-items: center;\n\n    height: 90px;\n    width: 100%;\n    padding: 0 10vw;\n`;\n","export default __webpack_public_path__ + \"static/media/puff.38a93f63.svg\";","export default __webpack_public_path__ + \"static/media/search.6174e09b.svg\";","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled, { css } from 'styled-components';\n\nimport ImagePuff from '~/assets/img/puff.svg';\nimport ImageSearch from '~/assets/img/search.svg';\n\nexport const Container = styled.form`\n    display: flex;\n    align-items: center;\n    height: 40px;\n    width: 100%;\n    padding: 5px;\n    border-radius: 30px;\n    background-color: rgb(194 194 194 / 35%);\n\n    .theme-dark & {\n        background-color: rgb(194 194 194 / 20%);\n    }\n`;\n\nexport const TextField = styled.input`\n    flex-grow: 1 1 auto;\n    height: 100%;\n    width: 100%;\n    border: 0;\n    color: var(--text-color);\n    background-color: transparent;\n    font-weight: bold;\n`;\n\nconst cssIcon = css`\n    height: 30px;\n    width: 30px;\n    margin: 0 10px;\n\n    background-size: contain;\n    opacity: 0.3;\n\n    .theme-dark & {\n        filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(93deg) brightness(103%)\n            contrast(103%);\n    }\n`;\n\nexport const IconSearch = styled.i`\n    ${cssIcon}\n    background: url(${ImageSearch}) no-repeat center;\n`;\n\nexport const IconLoading = styled.i`\n    ${cssIcon}\n    background: url(${ImagePuff}) no-repeat center;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport * as C from './styled';\n\nexport interface ISearch {\n    onSubmit?: React.FormEventHandler<HTMLFormElement>;\n    onChange?: React.FormEventHandler<HTMLInputElement>;\n    placeholder?: string;\n    value?: string;\n    loading?: boolean;\n}\n\nexport default function Search({ onSubmit, loading, ...props }: ISearch) {\n    return (\n        <C.Container onSubmit={onSubmit} autoComplete=\"off\">\n            {loading ? <C.IconLoading /> : <C.IconSearch />}\n            <C.TextField {...props} type=\"text\" name=\"search\" disabled={loading} />\n        </C.Container>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch, AppThunk, RootState } from './store';\nexport type { AppDispatch, AppThunk, RootState };\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport Alert from '../alert';\n\nimport * as C from './styled';\n\nimport Search from '~/components/search';\nimport { useAppDispatch, useAppSelector, setCityWeather, selectWeather } from '~/hooks';\n\nexport default function Header() {\n    const [search, setSearch] = React.useState('');\n    const { status } = useAppSelector(selectWeather);\n    const dispatch = useAppDispatch();\n\n    function handlerSearch(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        dispatch(setCityWeather(search)).then(() => {\n            setSearch('');\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <C.Container>\n                <Search\n                    placeholder=\"Pesquisa a cidade desejada\"\n                    onChange={(e) => setSearch(e.currentTarget.value)}\n                    onSubmit={handlerSearch}\n                    value={search}\n                    loading={status.name === 'LOADING'}\n                />\n            </C.Container>\n\n            {status.name === 'FAILED' ? <Alert value={status.message} /> : null}\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled, { keyframes } from 'styled-components';\n\nexport interface ISkeletonLoader {\n    radius?: string;\n    height?: string;\n    width?: string;\n    margin?: string;\n}\n\nconst loading = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nexport const Skeleton = styled.span<ISkeletonLoader>`\n    position: relative;\n    display: block;\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    border-radius: ${({ radius }) => radius || '17px'};\n    margin: ${({ margin }) => margin || '0'};\n    overflow: hidden;\n\n    background-color: #0000001f;\n\n    &:after {\n        content: '';\n        position: absolute;\n        height: 100%;\n        left: 0;\n        top: 0;\n        right: 0;\n        transform: translateX(-100%);\n        z-index: 1;\n        // prettier-ignore\n        background: linear-gradient(90deg, #ffffff00, #ffffff4d, #ffffff00);\n        animation: ${loading} 1.5s infinite;\n    }\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as C from './styled';\n\nexport interface ISkeletonLoader {\n    height?: string;\n    width?: string;\n    radius?: string;\n    margin?: string;\n}\n\nexport default function SkeletonLoader(props: ISkeletonLoader) {\n    return <C.Skeleton {...props} />;\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport * as C from './styled';\n\nimport { SkeletonLoader } from '~/components';\nimport { selectWeather, useAppSelector } from '~/hooks';\n\nexport default function Condition() {\n    const { status, condition } = useAppSelector(selectWeather);\n    return (\n        <C.Container>\n            <C.ContainerCondition>\n                {status.name === 'START' || status.name === 'LOADING' ? (\n                    <SkeletonLoader />\n                ) : (\n                    <C.IconCondition\n                        src={'assets/img/' + condition.icon + '.svg'}\n                        alt={condition.name}\n                    />\n                )}\n            </C.ContainerCondition>\n        </C.Container>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nimport { CssContainerCommon } from '../styled-common';\n\nexport const Container = styled.section`\n    ${CssContainerCommon}\n`;\n\nexport const ItemDetail = styled.div`\n    height: 25px;\n    width: 100%;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport * as C from './styled';\n\nimport { SkeletonLoader } from '~/components';\n\nexport default function Detail() {\n    return (\n        <C.Container>\n            {Array(3)\n                .fill(0)\n                .map((i) => (\n                    <C.ItemDetail key={i}>\n                        <SkeletonLoader />\n                    </C.ItemDetail>\n                ))}\n        </C.Container>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nexport const Container = styled.section`\n    width: 100%;\n    max-width: 700px;\n`;\n\nexport const ContainerItemList = styled.div`\n    display: inline-block;\n    height: 150px;\n    width: 80px;\n    margin: 0 10px;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport * as C from './styled';\n\nimport { SkeletonLoader } from '~/components';\n\nexport default function List() {\n    return (\n        <C.Container>\n            {Array(7)\n                .fill(0)\n                .map((i) => (\n                    <C.ContainerItemList key={i}>\n                        <SkeletonLoader />\n                    </C.ContainerItemList>\n                ))}\n        </C.Container>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/location-pin.2f176113.svg\";","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nimport { CssContainerCommon } from '../styled-common';\n\nimport IconLocationPin from '~/assets/img/location-pin.svg';\n\nexport const Container = styled.section`\n    ${CssContainerCommon}\n`;\n\nexport const ContainerCondition = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: start;\n    justify-content: center;\n    height: 64px;\n    width: 100%;\n`;\n\nexport const ValueTemperature = styled.span`\n    display: inline-block;\n    height: 100%;\n    font-size: 6em;\n    font-weight: bold;\n    line-height: 4rem;\n    text-align: right;\n`;\n\nexport const ContainerUnitsTemperature = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    min-width: 50px;\n`;\n\nexport interface IItemUnitsTemperature {\n    active: boolean;\n}\n\nexport const ItemUnitsTemperature = styled.a<IItemUnitsTemperature>`\n    line-height: 0.8rem;\n\n    ${({ active }) => active && 'opacity: 0.5;'}\n    ${({ active }) => active && 'cursor: default;'}\n`;\n\nexport const SeparateUnitsTemperature = styled.span`\n    border-left: solid 1px #868b90;\n`;\n\nexport const ContainerLocation = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: end;\n    justify-content: center;\n    gap: 0 5px;\n\n    height: 25px;\n    width: 100%;\n    max-width: 200px;\n\n    line-height: 1rem;\n    user-select: none;\n`;\n\nexport const IconLocation = styled.i`\n    display: inline-block;\n    height: 20px;\n    width: 20px;\n    margin: 0;\n\n    transition: fill 0.2s linear;\n    background: url(${IconLocationPin}) no-repeat center;\n    background-size: contain;\n\n    .theme-dark & {\n        filter: invert(100%) sepia(100%) saturate(0%) hue-rotate(37deg) brightness(105%)\n            contrast(104%);\n    }\n`;\n\nexport const CityLocation = styled.h3`\n    font-size: 1.17em;\n    text-align: center;\n    word-spacing: -5px;\n`;\n\nexport const CountryLocation = styled.span`\n    margin-top: 5px;\n    font-size: 1.17em;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport * as C from './styled';\n\nimport { SkeletonLoader } from '~/components';\nimport { selectWeather, useAppSelector } from '~/hooks';\n\nfunction celsiusToFahrenheit(n: number) {\n    return Math.floor(n * (9 / 5) + 32);\n}\n\nexport default function Info() {\n    const [fahrenheit, setFahrenheit] = React.useState(false);\n    const { status, location } = useAppSelector(selectWeather);\n\n    const temp = fahrenheit ? celsiusToFahrenheit(location.temp) : location.temp;\n\n    function handlerItemUnits(e: React.FormEvent<HTMLAnchorElement>, value: boolean) {\n        e.preventDefault();\n        e.currentTarget.classList.remove('active');\n        setFahrenheit(value);\n    }\n\n    function Temperature() {\n        return (\n            <React.Fragment>\n                <C.ValueTemperature>{temp}</C.ValueTemperature>\n                <C.ContainerUnitsTemperature>\n                    <C.ItemUnitsTemperature\n                        href=\"\"\n                        onClick={(e) => handlerItemUnits(e, false)}\n                        active={!fahrenheit}\n                    >\n                        ºC\n                    </C.ItemUnitsTemperature>\n                    <C.SeparateUnitsTemperature />\n                    <C.ItemUnitsTemperature\n                        href=\"\"\n                        onClick={(e) => handlerItemUnits(e, true)}\n                        active={fahrenheit}\n                    >\n                        ºF\n                    </C.ItemUnitsTemperature>\n                </C.ContainerUnitsTemperature>\n            </React.Fragment>\n        );\n    }\n\n    function Location() {\n        return (\n            <React.Fragment>\n                <C.CityLocation>\n                    <C.IconLocation />\n                    {location.name}\n                </C.CityLocation>\n                <C.CountryLocation>{location.country}</C.CountryLocation>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <C.Container>\n            <C.ContainerCondition>\n                {status.name === 'START' || status.name === 'LOADING' ? (\n                    <SkeletonLoader />\n                ) : (\n                    <Temperature />\n                )}\n            </C.ContainerCondition>\n            <C.ContainerLocation>\n                {status.name === 'START' || status.name === 'LOADING' ? (\n                    <SkeletonLoader />\n                ) : (\n                    <Location />\n                )}\n            </C.ContainerLocation>\n        </C.Container>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/world.2fb590ca.png\";","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport styled from 'styled-components';\n\nimport ImageWorld from '~/assets/img/world.png';\n\nexport const LayoutContainer = styled.main`\n    grid-area: main;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n\n    &:before {\n        content: ' ';\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 0;\n\n        opacity: 0.3;\n        z-index: -1;\n\n        background: url(${ImageWorld}) center no-repeat;\n        background-size: contain;\n        background-position-y: 0;\n    }\n\n    .theme-dark &:before {\n        opacity: 0.2;\n    }\n`;\n\nexport const MainLayoutContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n    gap: 10px;\n\n    width: 100%;\n`;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport Visual from './components/condition';\nimport Detail from './components/detail';\nimport List from './components/list';\nimport Info from './components/location';\nimport * as C from './styled';\n\nimport { Header as LayoutHeader, Footer as LayoutFooter } from '~/components';\n\nexport default function Home() {\n    return (\n        <React.Fragment>\n            <LayoutHeader />\n            <C.LayoutContainer>\n                <C.MainLayoutContainer>\n                    <Detail />\n                    <Info />\n                    <Visual />\n                </C.MainLayoutContainer>\n                <List />\n            </C.LayoutContainer>\n            <LayoutFooter />\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the React-weather project. All rights reserved.          │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport ThemeProvider, { GlobalStyle } from './theme';\n\nimport { store } from '~/hooks/store';\nimport Home from '~/pages/home';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider>\n                <GlobalStyle />\n                <Home />\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}